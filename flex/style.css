.item {
	height: 100px; /*высота*/
	width: 100px; /*ширина*/
	background: red; /*цвет*/
	margin: 5px; /*отступ - пространство до внутренней границы родителя*/
	align-self: stretch; /*выравнивает flex-элементы по текущей flex-линии, 
	переопределяя значение свойства align-items. Если у какого-либо 
	flex-элемента margin в поперечной оси выставлен в auto, то align-self 
	игнорируется.
	если родитель будет больше размеров блоком расстояние между блоками
	будет также большим*/
}

.container{
	display: flex; /*для использования flex*/
	/*отличие flex от inline-flex, flex - встроен, a inline - 
	в основном отвечает как элемент блока */
	flex-direction: row;/*направление элементов*/
	/*
	row
	row-reverse
	column
	column-reverse
	*/
	flex-wrap: wrap;/*изначально flex предразначен для записи в одной строке
	flex-wrap помогает с элементами, которые не помещаются в одну строку
	задает правила вывода flex-элементов —  в одну строку или в несколько, 
	с переносом блоков*/	
	/*width: 500px;*/
	height: 100%; /*задавая размер контейнера нужно следить, чтобы
	элементы были в размер, иначе величина расстояния между элементами 
	будет определяться	в зависимости от размера контейнера*/
	justify-content: center; /*определяет, как браузер распределяет пространство 
	между и вокруг элементов контента вдоль главной оси их контейнера*/
	/*
	flex-start
	center
	flex-end
	space-between
	space-around
	*/

}